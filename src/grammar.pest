WHITESPACE = _{ "\n" | "\t" | "\r" | SEPARATOR }
COMMENT = _{
  "/*" ~ (!"*/" ~ ANY)* ~ "*/"
  | "//" ~ ANY+ ~ "\n"
}

DOT = _{ "." }
LAMBDA = _{ "Î»" | "\\" }
VARIABLE_CHAR = _{ LETTER | NUMBER | "_" | "'" }

OPEN_PAREN = _{ "(" }
CLOSE_PAREN = _{ ")" }

MACRO_START = _{ "=" }
MACRO_END = _{ ";" }

main = {
  SOI ~ macros ~ term ~ EOI
}

// The preamble specifies shortand for expressions that can be reused.
macros = {
  macro_*
}

macro_ = {
  variable ~ MACRO_START ~ term ~ MACRO_END
}

// This is essentially
//
//   term = ( term ) | variable | abstraction | term term
//
// with the left recursion removed.
variable = @{
  VARIABLE_CHAR+
}

abstraction = !{
  LAMBDA ~ variable ~ DOT ~ term
}

application = !{
  variable ~ term
  | OPEN_PAREN ~ term ~ CLOSE_PAREN ~ term
}

term = !{
  application
  | abstraction
  | variable
  | OPEN_PAREN ~ term ~ CLOSE_PAREN
}
